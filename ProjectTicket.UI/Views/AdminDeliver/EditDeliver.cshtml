@model EntityLayer.Concrete.Deliver

@{
    ViewBag.Title = "EditDeliver";
    Layout = "~/Views/Shared/_SiteLayout.cshtml";
}

<br />
@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@
    
    <div class="form-horizontal">
        <h4>Deliver</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DeliverID)

        <div class="form-group">
            @Html.HiddenFor(model => model.DeliverName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.DeliverName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliverName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.DeliverImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.DeliverImagePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliverImagePath, "", new { @class = "text-danger" })
            </div>
        </div>  

        <div class="form-group">
            @Html.HiddenFor(model => model.DeliverDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.DeliverDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliverDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliverStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.DeliverStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DeliverStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.Hidden(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.Hidden("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <button class="btn btn-success">Güncelle</button>
    </div>
}


