@model EntityLayer.Concrete.Deliver

@{
    ViewBag.Title = "AddDeliver";
    Layout = "~/Views/Shared/_SiteLayout.cshtml";
}

<h2>Yeni Zimmet Alanı</h2>
 
@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.Label("Kullanıcı Adı Soyadı")
    @*@Html.DropDownList("UserID",(SelectList)ViewBag.nameLastName, "Lütfen Kullanıcı Seçiniz", new { @class = "form-control" })*@
    @*@Html.Label("Kullanıcı Soyadı")*@
        @Html.DropDownListFor(x => x.UserID, (List<SelectListItem>)ViewBag.vUsrName,"Kullanıcı seçiniz...", new { @class = "form-control", required = "required"})

    <div class="form-group">
        @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Modell, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Modell, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.Modell, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" , required = "required" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeliverDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeliverDate, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.DeliverDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <button class="btn btn-success">Zimmetle</button>
</div>
}
